{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGif","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","title","id","images","downsized_medium","console","log","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","catch","useFetchGifs","img","GifExpertApp","categories","ReactDOM","render","document","querySelector"],"mappings":"+LAGaA,EAAc,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,cACzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAWA,OACI,sBAAMC,SARW,SAACC,GAClBA,EAAEC,iBACgB,KAAfJ,GAAqBA,EAAWK,OAAOC,OAAS,IAC/CR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAIlB,SACI,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAZpB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCNlBG,EAAM,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,sEAERC,EAFQ,iDAEwCC,UAAUH,GAFlD,+DAGKI,MAAMF,GAHX,cAGRG,EAHQ,gBAIOA,EAAKC,OAJZ,uBAIPC,EAJO,EAIPA,KAEDC,EAAOD,EAAKE,KAAI,gBAAEC,EAAF,EAAEA,MAAOC,EAAT,EAASA,GAAIC,EAAb,EAAaA,OAAb,MAA0B,CAC5CD,GAAIA,EACJD,MAAOA,EACPR,IAAG,OAAEU,QAAF,IAAEA,OAAF,EAAEA,EAAQC,iBAAiBX,QATpB,kBAWPM,GAXO,kCAcdM,QAAQC,IAAR,MAdc,0DAAH,sDCCNC,EAAc,SAAC,GAAqB,IAApBN,EAAmB,EAAnBA,MAAWR,GAAQ,EAAZS,GAAY,EAART,KAGpC,OACI,sBAAKe,UAAU,yCAAf,UACI,qBAAKC,IAAKhB,EAAKiB,IAAKT,IACpB,mBAAGO,UAAU,oBAAb,SAAkCP,QCAjCU,EAAU,SAAC,GAAgB,IAAfpB,EAAc,EAAdA,SAKrB,ECTwB,SAACA,GACzB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNc,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAgBA,OAXAC,qBAAU,WACNzB,EAAOC,GAAUyB,MAAK,SAAAC,GACdH,EAAS,CACLhB,KAAMmB,EACNL,SAAQ,OAEjBM,MAAMb,QAAQC,OAClB,CAACf,IAIGsB,EDRwBM,CAAa5B,GAAhCY,EAAZ,EAAOL,KAAac,EAApB,EAAoBA,QAKpB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDjB,IAClDqB,GAAW,mBAAGJ,UAAU,8BAAb,wBACP,qBAAKA,UAAU,YAAf,SAEWL,EAAOH,KAAI,SAACoB,GAAD,OACP,cAAC,EAAD,eAA8BA,GAAZA,EAAIlB,aEpBzCmB,EAAe,WAExB,MAAoC5C,mBAAS,CAAC,iBAA9C,mBAAO6C,EAAP,KAAmB9C,EAAnB,KAIA,OACA,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BACM8C,EAAWtB,KAAI,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAASA,SAAUA,GAAeA,Y,MCXnDgC,IAASC,OACT,cAAC,EAAD,IACEC,SAASC,cAAc,Y","file":"static/js/main.1d78b580.chunk.js","sourcesContent":["import { useState } from \"react\"\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) =>{\r\n    const [inputValue, setInputValue] = useState('')\r\n    const handleInputChange = (e) =>{\r\n        setInputValue(e.target.value)\r\n    }\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        if(inputValue !== '' && inputValue.trim().length > 2){\r\n            setCategories(cats => [inputValue, ...cats])\r\n            setInputValue('');\r\n        }\r\n    }\r\n    return(\r\n        <form onSubmit={handleSubmit}>\r\n            <input type='text' value={inputValue} onChange={handleInputChange}/>\r\n        </form>\r\n    )\r\n}\r\nAddCategory.propTypes= {\r\n setCategories: PropTypes.func.isRequired\r\n}","export const getGif = async(category) =>{\r\n    try{\r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=LFI0GdzX3vuMZK2hQAweD3mFAjiYfZGo`\r\n        const resp = await fetch(url);\r\n        const {data} = await resp.json();\r\n\r\n        const gifs = data.map(({title, id, images}) => ({\r\n            id: id,\r\n            title: title,\r\n            url: images?.downsized_medium.url\r\n        }));\r\n        return gifs;\r\n    }\r\n    catch(error){\r\n        console.log(error);\r\n    }\r\n}","\r\nexport const GifGridItem = ({title, id, url}) =>{\r\n\r\n\r\n    return (\r\n        <div className='card animate__animated animate__fadeIn'>\r\n            <img src={url} alt={title}></img>\r\n            <p className='overflow-ellipsis'>{title}</p>\r\n        </div>\r\n    )\r\n}","import PropTypes from 'prop-types'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n// import {useState, useEffect} from 'react'\r\n// import { getGif } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ({category}) => {\r\n    //Hace que no se refresque cada vez que el componente cambia,\r\n    //para no sobresaturar la memoria, el segundo parametro son las \r\n    //dependencias\r\n    // const [images, setImages] = useState([]);\r\n    const {data:images, loading} = useFetchGifs(category);\r\n    // useEffect(() =>{\r\n    //     getGif(category).then(setImages);\r\n    // }, [category]);\r\n\r\n    return (\r\n        <>\r\n            <h3 className='animate__animated animate__fadeIn'>{category}</h3>\r\n            {loading && <p className='animate__animated heartBeat'>Loading...</p>}\r\n                 <div className='card-grid'>\r\n                        {\r\n                            images.map((img) => (\r\n                                <GifGridItem key={img.id} {...img}/>\r\n                            ))\r\n                        }\r\n                </div>\r\n            </> \r\n    )\r\n}\r\n\r\nGifGrid.propTypes = {\r\n    category: PropTypes.string.isRequired\r\n}","import { useState, useEffect } from \"react\"\r\nimport { getGif } from \"../helpers/getGifs\"\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect(() =>{\r\n        getGif(category).then(imgs =>{\r\n                setstate({\r\n                    data: imgs,\r\n                    loading:false\r\n                });\r\n        }).catch(console.log);\r\n    }, [category])\r\n\r\n\r\n\r\n    return state;\r\n}","import { useState } from \"react\"\r\nimport { AddCategory } from \"./components/AddCategory\"\r\nimport { GifGrid } from \"./components/GifGrid\"\r\n\r\nexport const GifExpertApp = () =>{\r\n\r\n    const [categories, setCategories] = useState(['Demons Souls'])\r\n    // const handleAdd = () =>{\r\n    //     setCategories(cats => [...cats, 'Demonslayer'])\r\n    // }\r\n    return (\r\n    <>\r\n        <h1>GifExpertApp</h1>\r\n        <AddCategory setCategories={setCategories}/>\r\n        <hr />\r\n        <ol>\r\n            { categories.map(category =>\r\n                 <GifGrid category={category} key={category}/>\r\n            )}\r\n        </ol>\r\n    </>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n<GifExpertApp />,\n  document.querySelector('#root')\n);\n"],"sourceRoot":""}